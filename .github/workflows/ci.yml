name: CI

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

jobs:
  analyze:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup | Backend | Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2

      - name: Setup | Backend | Install Python
        run: uv python install

      - name: Setup | Backend | Restore uv cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Setup | Frontend | Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Setup | Frontend | Setup node with pnpm cache
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: lts/*
          cache: pnpm

      - name: Setup | Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff

      - name: Analyze | Run static code analysis
        run: just analyze

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup | Setup docker compose
        uses: docker/setup-compose-action@23d018c8d3d7324668ae2253ab48526ce0fc2bad
      - name: Setup | Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff
      - name: Build
        env:
          TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL: false
          TRAEFIK_PUBLIC_NETWORK: traefik-public
          TRAEFIK_TAG: default
          TRAEFIK_PUBLIC_TAG: traefik-public
          DOCKER_IMAGE_FRONTEND: fmv-demo-frontend
          DOCKER_IMAGE_BACKEND: fmv-demo-backend
          STACK_NAME: fmv-demo
          DOMAIN: example.com
        run: just build

  test:
    name: Unit Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [22.x, 24.x]
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: pnpm/action-setup@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
          cache: pnpm

      - run: pnpm install
      - run: pnpm run test:unit

      # Disable until docker-compose/mongodb setup is complete
  # test-e2e:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cache
  #         key: cypress-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

  #     - uses: pnpm/action-setup@v3

  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: lts/*
  #         registry-url: https://registry.npmjs.org/
  #         cache: pnpm

  #     - run: pnpm install

  #     - name: Cypress PNPM Patch
  #       run: cp pnpm-lock.yaml package-lock.json

  #     - name: Cypress
  #       uses: cypress-io/github-action@v6
  #       with:
  #         install-command: echo
  #         build: pnpm run build
  #         start: npx vite preview --port 3333
